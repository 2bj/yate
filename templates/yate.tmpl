stylesheet

    %Body.Defs

    %Body.Templates

# ------------------------------------------------------------------------------------------------------------------- #

template [ %Args ]

    match %Jpath %Mode (%Args) %Body

template

    match %Jpath %Mode %Body

templateMode [ %Value != '' ]

    : %Value

# ------------------------------------------------------------------------------------------------------------------- #

function_ [ %Args ]

    func %Name(%Args) %Body

function_

    func %Name %Body

# ------------------------------------------------------------------------------------------------------------------- #

key

    key %Name (%Nodes, %Use) %Body

# ------------------------------------------------------------------------------------------------------------------- #

argListItem [ %Default ]

    %Typedef %Name = %Default

argListItem

    %Typedef %Name

# ------------------------------------------------------------------------------------------------------------------- #

var_

    %Name = %Value

# ------------------------------------------------------------------------------------------------------------------- #

block [ %Context == 'list' ]

    [
        %Defs

        %Templates

        %Exprs
    ]

block

    %Defs

    %Templates

    %Exprs


# ------------------------------------------------------------------------------------------------------------------- #

if_ [ %Else ]

    if %Condition {
        %Then
    } : {
        %Else
    }

if_

    if %Condition {
        %Then
    }

# ------------------------------------------------------------------------------------------------------------------- #

for_

    for %Expr {
        %Body
    }

# ------------------------------------------------------------------------------------------------------------------- #

apply [ %Args ]

    apply %Expr %Mode (%Args)

apply

    apply %Expr %Mode

# ------------------------------------------------------------------------------------------------------------------- #

attr

    @%Name %Op %Expr

# ------------------------------------------------------------------------------------------------------------------- #

inlineOr
    %Left || %Right

inlineAnd
    %Left && %Right

inlineNot
    !%Left

inlineEq
    %Left %Op %Right

inlineRel
    %Left %Op %Right

inlineAdd
    %Left %Op %Right

inlineMul
    %Left %Op %Right

inlineUnary
    -%Expr

inlineUnion
    %Left | %Right

inlineComplex
    ( %Expr )

inlineFunction
    %Name(%Args)

inlineNumber
    %Value

inlineVar
    $%Name

# ------------------------------------------------------------------------------------------------------------------- #

jpath [ %Context ]
    %Context/%Steps

jpath
    %Absolute%Steps

predicate
    [ %Expr ]

jpathStep
    %Name%Predicate

# ------------------------------------------------------------------------------------------------------------------- #

xmlEmpty
    <%Name%Attrs/>

xmlStart
    <%Name%Attrs>

xmlEnd
    </%Name>

xmlText
    %Text

xmlAttr
    \ %Name=%Value

# ------------------------------------------------------------------------------------------------------------------- #

inlineString
    "%Value"

stringExpr
    { %Expr }

stringLiteral
    %Value

# ------------------------------------------------------------------------------------------------------------------- #

inlineGrep
    %Expr[ %Predicate.Expr ]

inlineIndex
    %Expr{ %Index }

scalar
    (
        %Body
    )

pair
    %Key : %Value

array
    [
        %Body
    ]

object
    {
        %Body
    }

